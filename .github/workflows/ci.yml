name: CI

on:
  push:
    branches: [ main ]
    tags-ignore: [ '*' ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt install -y libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf
    - name: Install npm modules
      run: npm install
    - name: Create Artifacts
      run: npm run tauri build -- --debug
    - name: Create Archive (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        RUST_TARGET=`rustup show active-toolchain | sed -e 's/[^-]*-\(.*\)\s.*/\1/'`
        tar -C ./src-tauri/target/debug/ -zcf rsb-${RUST_TARGET}.tar.gz redfish-schema-browser
        echo "RUST_TARGET=${RUST_TARGET}" >> $GITHUB_ENV
        echo "ARTIFACT_PATH=rsb-${RUST_TARGET}.tar.gz" >> $GITHUB_ENV
    - name: Create Archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        $RUST_TOOLCHAIN = $(rustup show active-toolchain) -Split '[ -]'
        $RUST_ARCH=$RUST_TOOLCHAIN[1]
        $RUST_PLAT=$RUST_TOOLCHAIN[2]
        $RUST_OS=$RUST_TOOLCHAIN[3]
        $RUST_ENV=$RUST_TOOLCHAIN[4]
        $RUST_TARGET="${RUST_ARCH}-${RUST_PLAT}-${RUST_OS}-${RUST_ENV}"
        Compress-Archive -Path 'src-tauri\target\debug\redfish-schema-browser.exe' -DestinationPath "rsb-${RUST_TARGET}.zip"
        Write-Output "RUST_TARGET=$RUST_TARGET" >> $env:GITHUB_ENV
        Write-Output "ARTIFACT_PATH=rsb-${RUST_TARGET}.zip" >> $env:GITHUB_ENV
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.RUST_TARGET }}
        path: ${{ env.ARTIFACT_PATH }}
        retention-days: 1
